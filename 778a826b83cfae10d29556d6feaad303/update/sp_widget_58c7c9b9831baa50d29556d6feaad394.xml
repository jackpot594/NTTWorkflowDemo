<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function($scope, $http) {
  $scope.data = {
    chatHistory: [],
    userInput: ""
  };

  $scope.c = {
    send: function() {
      var txt = $scope.data.userInput && $scope.data.userInput.trim();
      if (!txt) return;
      $scope.data.chatHistory.push({role: 'user', content: txt});
      $scope.data.userInput = "";

      // 调用后台API（调用本Widget的Server Script）
      $scope.server.get({question: txt}).then(function(response){
        var answer = response.data.ai_reply || '很抱歉，AI客服当前无法回复。';
        $scope.data.chatHistory.push({role: 'ai', content: answer});
      });
    }
  };
};
]]></client_script>
        <controller_as>c</controller_as>
        <css>#ai-chatbot { max-width:400px; }&#13;
#ai-chatbot .user { text-align: right; color: #1677ff; margin-bottom: 6px; }&#13;
#ai-chatbot .ai { text-align: left; color: #009900; margin-bottom: 8px; }</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id/>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
  
}]]></link>
        <name>AI Chat Service</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
  // 若收到客户提问
  if (input && input.question) {
    var question = input.question;
    var openaiApiKey = "YOUR_OPENAI_API_KEY";
    var apiUrl = "https://api.openai.com/v1/chat/completions";
    var req = new sn_ws.RESTMessageV2();
    req.setEndpoint(apiUrl);
    req.setHttpMethod('POST');
    req.setRequestHeader('Content-Type','application/json');
    req.setRequestHeader('Authorization','Bearer ' + openaiApiKey);
    var payload = {
      model: "gpt-3.5-turbo",
      messages: [
        { role: "user", content: question }
      ]
    };
    req.setRequestBody(JSON.stringify(payload));
    try{
      var res = req.execute();
      var resBody = JSON.parse(res.getBody());
      data.ai_reply = resBody.choices[0].message.content;
    } catch(e){
      data.ai_reply = "（后台出错）AI客服暂时无法回答，请稍候再试！";
    }
  }
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-08-12 02:15:05</sys_created_on>
        <sys_id>58c7c9b9831baa50d29556d6feaad394</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>AI Chat Service</sys_name>
        <sys_package display_value="NTTWorkflowDemo" source="x_1799060_nttworkf">778a826b83cfae10d29556d6feaad303</sys_package>
        <sys_policy/>
        <sys_scope display_value="NTTWorkflowDemo">778a826b83cfae10d29556d6feaad303</sys_scope>
        <sys_update_name>sp_widget_58c7c9b9831baa50d29556d6feaad394</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-08-12 02:56:16</sys_updated_on>
        <template><![CDATA[<div id="ai-chatbot">
  <div style="height:300px;overflow:auto;border:1px solid #ccc;padding:10px;" ng-repeat="msg in data.chatHistory">
    <div ng-class="msg.role">{{msg.role == 'user' ? '您' : '智能客服'}}: {{msg.content}}</div>
  </div>
  <div>
    <input type="text" ng-model="data.userInput" style="width:80%;" placeholder="请输入您的问题...">
    <button class="btn btn-primary" ng-click="c.send()">发送</button>
  </div>
</div>
]]></template>
    </sp_widget>
</record_update>
